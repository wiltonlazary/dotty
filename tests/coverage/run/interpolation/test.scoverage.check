# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
simple
60
78
3
s
Apply
false
0
false
s"$a, ${b.length}"

1
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
simple
68
76
3
length
Apply
false
0
false
b.length

2
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
simple
16
26
2
simple
DefDef
false
0
false
def simple

3
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
hexa
113
126
6
f
Apply
false
0
false
f"0x${i}%04x"

4
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
hexa
82
90
5
hexa
DefDef
false
0
false
def hexa

5
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
195
224
9
apply
Apply
false
0
false
List("d", "o", "t", "t", "y")

6
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
195
199
9
List
Ident
false
0
false
List

7
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
229
278
10
map
Apply
false
0
false
xs.zipWithIndex.map((s, i) => println(s"$i: $s"))

8
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
229
244
10
zipWithIndex
Select
false
0
false
xs.zipWithIndex

9
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
$anonfun
259
277
10
println
Apply
false
0
false
println(s"$i: $s")

10
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
$anonfun
267
276
10
s
Apply
false
0
false
s"$i: $s"

11
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
284
309
12
println
Apply
false
0
false
println(simple(1, "abc"))

12
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
292
308
12
simple
Apply
false
0
false
simple(1, "abc")

13
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
314
332
13
println
Apply
false
0
false
println(hexa(127))

14
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
322
331
13
hexa
Apply
false
0
false
hexa(127)

15
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
337
355
14
println
Apply
false
0
false
println(raw"a\\nb")

16
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
345
354
14
raw
Apply
false
0
false
raw"a\\nb"

17
interpolation/test.scala
<empty>
Test$
Object
<empty>.Test$
main
130
138
8
main
DefDef
false
0
false
def main

