-- Error: tests/neg-custom-args/captures/vars.scala:13:6 ---------------------------------------------------------------
13 |  var a: String => String = f // error
   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |  Mutable variable a cannot have type box String => String since
   |  that type captures the root capability `cap`.
   |  This restriction serves to prevent local capabilities from escaping the scope where they are defined.
-- Error: tests/neg-custom-args/captures/vars.scala:14:6 ---------------------------------------------------------------
14 |  var b: List[String => String] = Nil // error
   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |  Mutable variable b cannot have type List[String => String] since
   |  the part String => String of that type captures the root capability `cap`.
   |  This restriction serves to prevent local capabilities from escaping the scope where they are defined.
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/vars.scala:11:24 -----------------------------------------
11 |  val z2c: () -> Unit = z2  // error
   |                        ^^
   |                        Found:    () ->{z2} Unit
   |                        Required: () -> Unit
   |
   | longer explanation available when compiling with `-explain`
-- Error: tests/neg-custom-args/captures/vars.scala:32:2 ---------------------------------------------------------------
32 |  local { cap3 => // error
   |  ^^^^^
   |  Sealed type variable T cannot be instantiated to box (x$0: String) => String since
   |  that type captures the root capability `cap`.
   |  This is often caused by a local capability in an argument of method local
   |  leaking as part of its result.
