-- [E007] Type Mismatch Error: tests/neg/i7294-a.scala:10:20 -----------------------------------------------------------
10 |    case x: T => x.g(10) // error
   |                 ^^^^^^^
   |                 Found:    Any
   |                 Required: T
   |
   |                 where:    T is a type in given instance f with bounds <: foo.Foo
   |
   | longer explanation available when compiling with `-explain`
-- Warning: tests/neg/i7294-a.scala:10:12 ------------------------------------------------------------------------------
10 |    case x: T => x.g(10) // error
   |            ^
   |            Result of implicit search for scala.reflect.TypeTest[Nothing, T] will change.
   |            Current result foo.Test.f will be no longer eligible
   |              because it is not defined before the search position.
   |            Result with new rules: No Matching Implicit.
   |            To opt into the new rules, compile with `-source future` or use
   |            the `scala.language.future` language import.
   |
   |            To fix the problem without the language import, you could try one of the following:
   |              - use a `given ... with` clause as the enclosing given,
   |              - rearrange definitions so that foo.Test.f comes earlier,
   |              - use an explicit argument.
   |            This will be an error in Scala 3.5 and later.
   |
   |            where:    T is a type in given instance f with bounds <: foo.Foo
No warnings can be incurred under -Werror (or -Xfatal-warnings)
