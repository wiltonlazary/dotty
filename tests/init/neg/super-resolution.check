-- Error: tests/init/neg/super-resolution.scala:21:6 -------------------------------------------------------------------
21 |  val m = 30 // error
   |      ^
   |      Access non-initialized value m. Calling trace:
   |      -> class C extends A with M with N:	[ super-resolution.scala:17 ]
   |         ^
   |      -> foo()	[ super-resolution.scala:18 ]
   |         ^^^^^
   |      -> override def foo(): Int = b * super.foo()	[ super-resolution.scala:15 ]
   |                                       ^^^^^^^^^^^
   |      -> override def foo(): Int = a + super.foo()	[ super-resolution.scala:11 ]
   |                                       ^^^^^^^^^^^
   |      -> def foo(): Int = m	[ super-resolution.scala:7 ]
   |                          ^
-- Error: tests/init/neg/super-resolution.scala:19:6 -------------------------------------------------------------------
19 |  val a = 10 // error
   |      ^
   |      Access non-initialized value a. Calling trace:
   |      -> class C extends A with M with N:	[ super-resolution.scala:17 ]
   |         ^
   |      -> foo()	[ super-resolution.scala:18 ]
   |         ^^^^^
   |      -> override def foo(): Int = b * super.foo()	[ super-resolution.scala:15 ]
   |                                       ^^^^^^^^^^^
   |      -> override def foo(): Int = a + super.foo()	[ super-resolution.scala:11 ]
   |                                   ^
-- Error: tests/init/neg/super-resolution.scala:20:6 -------------------------------------------------------------------
20 |  val b = 20 // error
   |      ^
   |      Access non-initialized value b. Calling trace:
   |      -> class C extends A with M with N:	[ super-resolution.scala:17 ]
   |         ^
   |      -> foo()	[ super-resolution.scala:18 ]
   |         ^^^^^
   |      -> override def foo(): Int = b * super.foo()	[ super-resolution.scala:15 ]
   |                                   ^
