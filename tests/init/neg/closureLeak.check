-- Error: tests/init/neg/closureLeak.scala:11:14 -----------------------------------------------------------------------
11 |    l.foreach(a => a.addX(this)) // error
   |              ^^^^^^^^^^^^^^^^^
   |              Cannot prove the method argument is hot. Only hot values are safe to leak.
   |              Found = Fun { this = ThisRef[class Outer], owner = class Outer }. Calling trace:
   |              -> class Outer {	[ closureLeak.scala:1 ]
   |                 ^
   |              -> l.foreach(a => a.addX(this)) // error	[ closureLeak.scala:11 ]
   |                           ^^^^^^^^^^^^^^^^^
   |
   |              Promoting the value to hot (transitively initialized) failed due to the following problem:
   |              Cannot prove the method argument is hot. Only hot values are safe to leak.
   |              Found = ThisRef[class Outer].
   |              Non initialized field(s): value p. Promotion trace:
   |              -> l.foreach(a => a.addX(this)) // error	[ closureLeak.scala:11 ]
   |                                       ^^^^
